# Create a pod named hello with image bitnami/kubectl and command echo "Hello World". Make sure the pod does not restart automatically.

# Command:
# k run hello --image=bitnami/kubectl --restart=Never --command -- echo "Hello World"

# OUTPUT

apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu, memory request for container
      hello; cpu, memory limit for container hello'
  creationTimestamp: "2024-02-11T06:48:50Z"
  labels:
    run: hello
  name: hello
  namespace: kubeacademy-w01-s240
  resourceVersion: "193939543"
  uid: e66c212b-80f8-4087-b3b5-e15ad2219e90
spec:
  containers:
  - command:
    - echo
    - Hello World
    image: bitnami/kubectl
    imagePullPolicy: Always
    name: hello
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 128Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-628sg
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: ip-10-0-1-22.us-east-2.compute.internal
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-628sg
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-02-11T06:48:50Z"
    reason: PodCompleted
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-02-11T06:48:50Z"
    reason: PodCompleted
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-02-11T06:48:50Z"
    reason: PodCompleted
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-02-11T06:48:50Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://a769225e41d636eed28974dd90a1d6ccb0404f44e01d4a21bd4150d5fec32ce5
    image: docker.io/bitnami/kubectl:latest
    imageID: docker.io/bitnami/kubectl@sha256:a9805ee86858dfaf164f72cd08e4bf5b364f14af95bd78e7784d655af19e3938
    lastState: {}
    name: hello
    ready: false
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: containerd://a769225e41d636eed28974dd90a1d6ccb0404f44e01d4a21bd4150d5fec32ce5
        exitCode: 0
        finishedAt: "2024-02-11T06:48:51Z"
        reason: Completed
        startedAt: "2024-02-11T06:48:51Z"
  hostIP: 10.0.1.22
  phase: Succeeded
  podIP: 10.0.1.43
  podIPs:
  - ip: 10.0.1.43
  qosClass: Burstable
  startTime: "2024-02-11T06:48:50Z"